import org.springframework.beans.factory.annotation.Value;
import org.springframework.kafka.annotation.KafkaListener;
import org.springframework.kafka.config.KafkaListenerEndpointRegistry;
import org.springframework.kafka.listener.MessageListener;
import org.springframework.kafka.listener.config.MethodKafkaListenerEndpoint;
import org.springframework.kafka.listener.config.KafkaListenerEndpointRegistrar;
import org.springframework.kafka.support.Acknowledgment;
import org.springframework.messaging.handler.annotation.Payload;
import org.springframework.stereotype.Service;

import javax.annotation.PostConstruct;

@Service
public class PandaNotificationListener {

    @Value("${kafka.listeners[0].listener-id}")
    private String listenerId;

    @Value("${kafka.listeners[0].topic-name}")
    private String topicName;

    private final KafkaListenerEndpointRegistry kafkaListenerEndpointRegistry;

    public PandaNotificationListener(KafkaListenerEndpointRegistry kafkaListenerEndpointRegistry) {
        this.kafkaListenerEndpointRegistry = kafkaListenerEndpointRegistry;
    }

    @PostConstruct
    public void configureKafkaListener() {
        MethodKafkaListenerEndpoint<String, String> kafkaListenerEndpoint = new MethodKafkaListenerEndpoint<>();
        kafkaListenerEndpoint.setId(listenerId);
        kafkaListenerEndpoint.setGroupId("panda-group");
        kafkaListenerEndpoint.setTopics(topicName);
        kafkaListenerEndpoint.setMessageHandlerMethodFactory(null);  // Configure your message handler method factory if needed

        kafkaListenerEndpoint.setBean(this);
        kafkaListenerEndpoint.setMethod(this.getClass().getMethod("listen", String.class, Acknowledgment.class));

        kafkaListenerEndpointRegistry.registerListenerContainer(kafkaListenerEndpoint, null);
    }

    @KafkaListener
    public void listen(@Payload String message, Acknowledgment acknowledgment) {
        System.out.println("Received message: " + message);
        // Process the message
        acknowledgment.acknowledge();
    }
}
