@BeforeEach
void setUp() {
    MockitoAnnotations.initMocks(this);

    // Setup other mocks and properties
    queryName = "account"; // or "getAssetManagers" based on what you want to test

    // Mocking LoadDto
    loadDto = mock(LoadDto.class);
    when(loadDto.getRunId()).thenReturn(UUID.randomUUID().toString()); // Ensures getRunId() does not return null

    // Continue setting up other mocks
    loadService = mock(LoadService.class);
    when(loadService.insertLoad(anyString())).thenReturn(loadDto); // Ensures insertLoad does not return null

    radixQueryProperties = new DataChangeAlertRadixProperties.RadixQueryProperties();
    radixQueryProperties.setRadixQuery("query { account { accountId code } }");

    // Ensure that getRadixQueryProperties does not return Optional.empty() for a valid test case
    when(dataChangeAlertBaseServiceImpl.getRadixQueryProperties(anyString())).thenReturn(Optional.of(radixQueryProperties));
}
