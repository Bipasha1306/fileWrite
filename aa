import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class DataChangeAlertLoadDtoTest {

    @Test
    void testBuilder() {
        String expectedRunId = "testRunId";
        byte[] expectedFileContent = {1, 2, 3};

        DataChangeAlertLoadDto dto = DataChangeAlertLoadDto.builder()
                .runId(expectedRunId)
                .fileContent(expectedFileContent)
                .build();

        assertEquals(expectedRunId, dto.getRunId());
        assertArrayEquals(expectedFileContent, dto.getFileContent());
    }

    @Test
    void testDefaultFieldAccessibility() {
        DataChangeAlertLoadDto dto = DataChangeAlertLoadDto.builder().build();
        assertNotNull(dto);
        
        // Ensure that fields are initialized correctly
        assertNull(dto.getRunId()); // When using the builder, runId should be null initially
        assertNull(dto.getFileContent()); // File content should also be null initially
    }

    @Test
    void testSetRunIdAndFileContent() {
        String runId = "newRunId";
        byte[] fileContent = {4, 5, 6};

        DataChangeAlertLoadDto dto = DataChangeAlertLoadDto.builder()
                .runId(runId)
                .fileContent(fileContent)
                .build();

        assertEquals(runId, dto.getRunId());
        assertArrayEquals(fileContent, dto.getFileContent());
    }
}
