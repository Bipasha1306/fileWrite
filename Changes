public Map<String, Object> getFilters(Map<String, List<String>> entityAndFilterColumn) {
    Map<String, Object> result = new LinkedHashMap<>();
    entityAndFilterColumn.forEach((key, values) -> {
        log.info(" key -------------------------------" + key);
        List<NotificationDetails> notificationDetailsList = notificationRepository.findAllByIsProcessedAndSourceSystemAndEntityName(
                "N", "panda", key);
        List<String> filters = new ArrayList<>();

        for (NotificationDetails notificationDetails : notificationDetailsList) {
            try {
                if ("N".equals(notificationDetails.getIsProcessed())) {
                    processNotificationDetails(notificationDetails, values, filters); // looping to find matching values
                } else if ("Y".equals(notificationDetails.getIsProcessed())) {
                    // Log a message when isProcessed is "Y"
                    log.info("Skipping processing for NotificationDetails with isProcessed = Y");
                    // Skip to the next iteration
                }
            } catch (JsonProcessingException e) {
                // Log the exception without throwing it
                log.error("Error processing NotificationDetails", e);
            }
        }

        result.put(key, filters);
    });

    return result;
}

private void processNotificationDetails(NotificationDetails notificationDetails, List<String> values, List<String> filters)
        throws JsonProcessingException {
    notificationDetails.getKeysAsMap().forEach((key2, value2) -> {
        if (values.contains(key2)) {
            eventTypemap.put(value2, notificationDetails.getEventType());
            filters.add(value2);
        }
    });
}


--------------------------------------

/**
 * Method to map the filter IDs columns to the correct one
 * @param filterMap the map of the entity and list of column names
 * @return filter the concatenated string of mapped filter IDs
 */
public String getCurrentFilter(Map<String, List<String>> filterMap){
    StringBuilder filter = new StringBuilder();

    for (List<String> values : filterMap.values()) {
        for (String value : values) {
            if (value.equals("account_id")) {
                filter.append("accountId");
            } else if (value.equals("party_id")) {
                filter.append("partyId");
            } else {
                filter.append(value);
            }
        }
    }

    return filter.toString();
}

